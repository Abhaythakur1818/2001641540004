const express = require('express');
const axios = require('axios');
const app = express();
const port = 8008;


app.get('/numbers', async (req, res) => {
  try {
    const urls = req.query.url;

    if (!urls || !Array.isArray(urls)) {
      return res.status(400).json({ error: 'No valid URLs provided in the query parameters.' });
    }
    const uniqueNumbers = [];

    function mergeIntegers(numbers) {
      for (const num of numbers) {
        if (!uniqueNumbers.includes(num)) {
          uniqueNumbers.push(num);
        }
      }
    }

    const urlArray = Array.isArray(urls) ? urls : [urls];

 
    const fetchPromises = urlArray.map(async (url) => {
      try {
        const response = await axios.get(url, { timeout: 500 }); 
        if (Array.isArray(response.data) && response.data.every(Number.isInteger)) {
          mergeIntegers(response.data);
        } else {
          console.error(`Invalid response data from ${url}`);
        }
      } catch (error) {
        console.error(`Error fetching data from ${url}:`, error.message);
      }
    });

    await Promise.all(fetchPromises);
    uniqueNumbers.sort((a, b) => a - b);

    res.json({ numbers: uniqueNumbers });
  } catch (error) {
    console.error('Internal server error:', error.message);
    res.status(500).json({ error: 'Internal server error.' });
  }
});


app.listen(port, () => {
  console.log(`number-management-service is listening on port ${port}`);
});
